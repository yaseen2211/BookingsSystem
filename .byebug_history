c
 Cleaner.available_cleaners.count
 Cleaner.available_cleaners
available_cleaners
c
Cleaner.joins(:cities).where(:cities => {code: self.city}).count
Cleaner.joins(:cities).where(:cities => {code: self.city}).allc
Cleaner.joins(:cities).where(:cities => {code: self.city})).all
self.city
self
se;f
c
self.city
self.booking_time
self
c
@customer.booking_time.utc
Time.zone
@customer.booking_time.zone
@customer.booking_time
c
@customer.booking_time
c
@customer.starts_at
@customer.starts_at.class
@customer.date
@customer.starts_at.class
@customer.starts_at
c
p["starts_at(4i)"]+":"+p["starts_at(5i)"]
p["starts_at(4i)"]+":"+"starts_at(5i)"=>"18"
p["starts_at(4i)"]
    p = params[:customer]
time = params[:starts_at]
t.min
t.hour
t = Time.parse("16:30")
Time.parse("16:30")
params
Date.new(params[:customer]['date(1i)'], params[:customer]['date(2i)'], params[:customer]['date(3i)'])
Date.new("2017".to_i,"8".to_i,"7".to_i)
Date.new("2017","8","7")
params[:customer]['date(1i)']
params[:customer]['date(3i)']
params[:customer]['date(2i)']
Date.new(params[:customer]['date(1i)'], params[:customer]['date(2i)'], params[:customer]['date(3i)'])
params[:customer['date(2i)']
params[:customer]['date(1i)']
Date.new(2012, 8, 29)
Date.new(params[:customer]['date(1i)'], params[:customer['date(2i)'], params[:customer['date(3i)']]])
params
continue
params[:customer]["date(3i)"]
params[:customer][:date(3i)]
params[:customer][:date]
params
c
cities
c
params['cleaner']['cities']
params['cities']
cities
c
params
